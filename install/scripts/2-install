#
# By Chih-Wei Huang <cwhuang@linux.org.tw>
# Last updated 2011/01/09
#
# License: GNU Public License
# We explicitely grant the right to use the scripts
# with Android-x86 project.
#

tempfile=/tmp/temp-$$
menufile=/tmp/menu-$$

CPIO=/system/xbin/cpio

rebooting()
{
	dialog --title " Rebooting... " --nocancel --pause "" 8 41 1
	sync
	umount -a
	reboot -f
}

poweroffing()
{
	dialog --title " Poweroffing... " --nocancel --pause "" 8 41 1
	sync
	umount -a
	poweroff -f
}

choose()
{
	dialog --clear --title " $1 " \
		--menu "$2" 20 71 13 --file $menufile 2> $tempfile

	retval=$?
	choice=`cat $tempfile`
}

progress_bar()
{
	dialog --clear --title " $1 " --gauge "\n $2" 8 70
}

format_fs()
{
	local cmd
	cmd="mke2fs -jL"
	
	$cmd Android-x86 /dev/$1 | awk '{
		# FIXME: very imprecise progress
		if (match($0, "done"))
			printf("%d\n", i+=33)
	}' | progress_bar "Formatting" "Formatting partition $1..."
}

create_entry()
{
	title=$1
	shift
	echo -e "title $title\n\tkernel /$asrc/kernel$vga $@ SRC=/$asrc\n\tinitrd /$asrc/initrd.img\n" >> $menulst
}

create_menulst()
{
	menulst=/hd/grub/menu.lst
	[ -n "$VESA" ] && vga=" vga=788 modeset=0"
	echo -e "default=0\ntimeout=6\nroot (hd0,$1)\nsplashimage=/grub/android-x86.xpm.gz\n" > $menulst
	cmdline=`cat /proc/cmdline | sed "s|\(initrd.*img\s*\)||; s|quiet\s*||; s|\(vga=\w\+\?\s*\)||; s|\(DPI=\w\+\?\s*\)||; s|\(INSTALL=\w\+\?\s*\)||; s|\(SRC=\S\+\?\s*\)||; s|\(DEBUG=\w\+\?\s*\)||; s|\(BOOT_IMAGE.*\)||"`

	if grep -q ^ro.sf.lcd_density /android/default.prop /android/system/build.prop; then
		create_entry "Android-x86 $VER" quiet $cmdline
	else
		create_entry "Android-x86 $VER (HDPI)" quiet $cmdline DPI=240
		create_entry "Android-x86 $VER (MDPI)" quiet $cmdline DPI=160
	fi
	create_entry "Android-x86 $VER (Debug mode)" $cmdline DEBUG=1
}

create_winitem()
{
	win=`fdisk -l /dev/$(echo $1 | cut -b-3) | grep ^/dev | cut -b6-12,55- | awk '{
		if (match($2, "NTFS"))
			print $1
	}' | head -1`
	if [ -n "$win" ]; then
		dialog --title " Confirm " --yesno \
			"\nThe installer found a Windows partition in /dev/$win.\n\nDo you want to create a boot item for Windows?" 9 59
		[ $? -ne 0 ] && return 1
		wp=$((`echo $win | cut -b4-`-1))
		echo -e "title Windows\n\trootnoverify (hd$d,$wp)\n\tchainloader +1\n" >> $menulst
	fi
}

create_img()
{
	bname=`basename $2`
	if [ -e $2 ]; then
		dialog --title " Confirm " --defaultno --yesno \
			"\n $bname exists. Overwrite it?" 7 38
		[ $? -ne 0 ] && return 255
		rm -f $2
	fi
	dialog --title " Question " --nook --nocancel --inputbox \
		"\nPlease input the size of the $bname in MB (max 2047):" 8 63 $1 2> $tempfile
	size=`cat $tempfile`
	[ 0$size -le 0 -o 0$size -gt 2047 ] && size=2047
	( dd bs=1M count=$size if=/dev/zero | pv -ns ${size}m | dd of=$2 ) 2>&1 \
		| progress_bar "Creating $bname" "Expect to write $size MB..."
}

create_data_img()
{
	dialog --title " Confirm " --yesno \
		"\nThe installer is going to create a disk image to save the user data. At least 512MB free disk space is recommended.\n\nAre you sure to create the image?" 11 62

	if [ $? -eq 0 ]; then
		if create_img 512 data.img; then
			losetup /dev/loop6 data.img
			mke2fs -jL /data /dev/loop6 > /dev/tty6
		fi
		[ $? -ne 0 ] && dialog --msgbox "\n Failed to create data.img." 7 33
	else
		dialog --title " Warning " --msgbox \
			"\nOK. So data will be save to a RAMDISK(tmpfs), and lose after power off." 8 49
	fi
}

create_sdcard_img()
{
	case "$fs" in
		vfat|fuseblk)
			mkdir sd
			sdcard=sd/sdcard.img
			;;
		*)
			sdcard=data/sdcard.img
			;;
	esac

	if create_img 2047 $sdcard; then
		losetup /dev/loop7 $sdcard
		newfs_msdos -L sdcard /dev/loop7 > /dev/tty7 2>&1
	fi
	if [ $? -eq 0 ]; then
		[ -n "menulst" ] && sed -i "s|\(SDCARD=\S\+\?\s*\)||; s|\(SRC=\S\+\?\s*\)|\1 SDCARD=/$sdcard|" $menulst
		msg="The fake SD card is created successfully"
	else
		msg="Failed to create a fake SD card"
	fi
	cd /
	dialog --ok-label Reboot --msgbox "\n $msg." 7 47
}

use_sdb_as_sdcard()
{
	[ -n "menulst" ] && sed -i "s|\(SDCARD=\S\+\?\s*\)||; s|\(SRC=\S\+\?\s*\)|\1 SDCARD=sdb|" $menulst
	msg="Andorid will use sdb as the SD card"
	cd /
	dialog --ok-label Reboot --msgbox "\n $msg." 7 47
}

install_to()
{
	cd /
	mountpoint -q /hd && umount /hd
	while [ 1 ]; do
		format_fs $1
		try_mount rw /dev/$1 /hd && break
		dialog --clear --title " Error " --defaultno --yesno \
			"\n Cannot mount /dev/$1\n Do you want to format it?" 8 37
		[ $? -ne 0 ] && return 255
	done

	fs=`cat /proc/mounts | grep /dev/$1 | awk '{ print $3 }'`

	asrc=android-$VER

	# Install grub
	cp -af /grub /hd
	d=0
	while [ 1 ]; do
		h=`echo $d | awk '{ printf("%c", $1+97) }'`
		[ -d /sys/block/[sh]d$h/$1 ] && break
		d=$(($d+1))
	done
	p=$((`echo $1 | cut -b4-`-1))
	create_menulst $p
	create_winitem $1 $d
	rm -f /hd/boot/grub/stage1
	echo "setup (hd$d) (hd$d,$p)" | grub > /dev/tty5
	[ $? -ne 0 ] && return 255

	files="mnt/$SRC/kernel mnt/$SRC/initrd.img mnt/$SRC/ramdisk.img"
	files="$files android/system"
	size=0
	for s in `du -sk $files | awk '{print $1}'`; do
		size=$(($size+$s))
	done
	mkdir hd/$asrc
	cd hd/$asrc
	rm -rf system*
	( ( cd /; find $files | $CPIO -H newc -o ) | pv -ns ${size}k | ( $CPIO -iud > /dev/null; echo $? > /tmp/result )) 2>&1 \
		| progress_bar "Installing Android-x86" "Expect to write $size KB..."
	result=$((`cat /tmp/result`*255))

	if [ $result -eq 0 ]; then
		chmod 644 *
		chown 0.0 *
		mv mnt/$SRC/* . && rm -rf mnt
		[ -d android ] && mv android/* . && rmdir android

		case "$fs" in
			vfat|fuseblk)
				create_data_img
				;;
			*)
				mkdir data
				;;
		esac
	fi

	sync

	return $result
}

install_hd()
{
	echo "n
p
1


w
" | fdisk /dev/sda

	install_to sda1
	retval=$?

	return $retval
}

do_install()
{
	until install_hd; do
		if [ $retval -eq 255 ]; then
			dialog --title ' Error! ' --yes-label Retry --no-label Reboot \
				--yesno '\nInstallation failed! Please check if you have enough free disk space to install Android-x86.' 8 51
			[ $? -eq 1 ] && rebooting
		fi
	done

        create_sdcard_img
	poweroffing
}
